var mergePossibleLessonsByYear, years;var mergePossibleLessonsByClass, classes;document.getElementById('insert').onclick = async function() {    if (years === undefined) {        let response = await fetch('../lesson/json', {            method: 'GET',            headers: {                'Content-type': 'application/json'            }        });            if (!response.ok) {            console.log('JSON error')            return;        }                let promis = await response.json();        mergePossibleLessonsByYear = promis.mergePossibleLessonsByYear;        years = promis.years;    }    let table = document.getElementsByTagName('table')[0];    let row = table.insertRow(table.rows.length);    let cell0 = row.insertCell(0);        select = document.createElement('select');        select.setAttribute('name', 'lesson[]');        select.setAttribute('onchange', 'changeSelectsList(this)');        cell0.appendChild(select);        select.focus();        option = document.createElement('option');        select.appendChild(option);        mergePossibleLessonsByYear.forEach(element => {            option = document.createElement('option');            option.setAttribute('value', element['subject_id']+'|'+element['teacher_id']);            option.innerHTML = element['subject_name']+' - '+element['teacher_name'];            select.appendChild(option);        });    for (let i = 1; i < 5; i++) {        cell = row.insertCell(i);            select = document.createElement('select');            select.setAttribute('name', 'class'+i+'[]');            select.setAttribute('class', 'select-align-right');            cell.appendChild(select);            option = document.createElement('option');            select.appendChild(option);                years.forEach(element => {                option = document.createElement('option');                option.setAttribute('value', element.year);                option.innerHTML = element.year;                select.appendChild(option);            });        cell.appendChild(select);    }    return false;}async function insertRow() {    if (classes === undefined) {        let response = await fetch('../lesson/json', {            method: 'GET',            headers: {                'Content-type': 'application/json'            }        });            if (!response.ok) {            console.log('JSON error')            return;        }                let promis = await response.json();        mergePossibleLessonsByClass = promis.mergePossibleLessonsByClass;        classes = promis.classes;    }    let table = document.getElementsByTagName('table')[1];    let row = table.insertRow(table.rows.length);    let cell0 = row.insertCell(0);        select = document.createElement('select');        select.setAttribute('name', 'lesson[]');        cell0.appendChild(select);        select.focus();        option = document.createElement('option');        select.appendChild(option);        mergePossibleLessonsByClass.forEach(element => {            option = document.createElement('option');            option.setAttribute('value', element['subject_id']+'|'+element['teacher_id']);            option.innerHTML = element['subject_name']+' - '+element['teacher_name'];            select.appendChild(option);        });    for (let i = 1; i < 5; i++) {        cell = row.insertCell(i);            select = document.createElement('select');            select.setAttribute('name', 'class'+i+'[]');            cell.appendChild(select);            option = document.createElement('option');            select.appendChild(option);                classes.forEach(element => {                option = document.createElement('option');                option.setAttribute('value', element.name);                option.innerHTML = element.name;                select.appendChild(option);            });        cell.appendChild(select);    }    return false;}function changeSelectsList(element) {    console.log(element);}