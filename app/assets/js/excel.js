const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';const INVALID_CHARACTER_ERR = ( function() {        // fabricate a suitable error object        try {            document.createElement('$');        } catch (error) {            return error;        }}());// encoderwindow.btoa || (window.btoa = function(string) {    let a, b, b1, b2, b3, b4, c, i = 0, len = string.length, max = Math.max, result = '';    while (i < len) {        a = string.charCodeAt(i++) || 0;        b = string.charCodeAt(i++) || 0;        c = string.charCodeAt(i++) || 0;        if (max(a, b, c) > 0xFF) {            throw INVALID_CHARACTER_ERR;        }        b1 = (a >> 2) & 0x3F;        b2 = ((a & 0x3) << 4) | ((b >> 4) & 0xF);        b3 = ((b & 0xF) << 2) | ((c >> 6) & 0x3);        b4 = c & 0x3F;        if (!b) {            b3 = b4 = 64;        } else if (!c) {            b4 = 64;        }        result += characters.charAt(b1) + characters.charAt(b2) + characters.charAt(b3) + characters.charAt(b4);    }    return result;});const exportElement = document.getElementById('export');if (exportElement) {    exportElement.onclick = function() {        const a = document.getElementById('export');        const worksheet = a.download.substring(a.download.lastIndexOf("-") + 1, a.download.lastIndexOf("."));        const uri = 'data:application/vnd.ms-excel;base64,';        const template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';        const ctx = {worksheet: worksheet, table: getTableContent()};        const hrefvalue = uri + base64(format(template, ctx));        a.href = hrefvalue;    }();}function base64(s) {    return window.btoa(unescape(encodeURIComponent(s)));}function format(s, c) {    return s.replace(/{(\w+)}/g, function(m, p) {        return c[p];    });}function getTableContent() {    const table = document.getElementsByTagName('table')[0];    if (table.classList.contains('timetable')) {        return table.innerHTML;    }    if (table.classList.contains('timetable-sm')) {        return table.innerHTML;    }    let result = '<tr>' + table.getElementsByTagName('tr')[0].innerHTML + '</tr><tr>';    const td = table.getElementsByTagName('td');    for (let i = 0; i < td.length; i++) {        result += '<td>';        const inputs = td[i].childNodes;        inputs.forEach(element => {            if (element.tagName === 'INPUT' && element.type !== 'hidden') {                result += element.value;            } else if (element.tagName === 'SELECT') {                result += element.options[element.selectedIndex].text + ' ';            } else if (element.tagName === 'SPAN' || element.tagName === 'DIV') {                result += element.innerHTML;            }        });        result += '</td>';        if ((i+1) % table.rows[0].cells.length === 0) {            result += '</tr><tr>';        }    }    return result;}