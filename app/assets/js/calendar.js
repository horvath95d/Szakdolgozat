var today = new Date();var currentMonth = today.getMonth();var currentYear = today.getFullYear();var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];var events;window.onload = async function() {	let response = await fetch('calendar/json', {		method: 'GET',		headers: {			'Content-type': 'application/json'		}	});	if (!response.ok) {		console.log('JSON error')		return;	}		let promis = await response.json();		events = promis.events;	renderCalendar(currentYear, currentMonth);}function renderCalendar(year, month) {	document.getElementById("month").innerHTML = year + " " + months[month];		var firstDay = new Date(year, month).getDay();	firstDay = firstDay == 0 ? 7 : firstDay;    var daysInMonth = 32 - new Date(year, month, 32).getDate();    var tbl = document.getElementById("calendar-body");    tbl.innerHTML = "";	var date = 1; 	var dateInNewMonth = 1;	var cellCount = 0;	    for (var i = 0; i < 6; i++) {        var row = document.createElement("tr");        for (var j = 1; j < 8; j++) {            if (i === 0 && j < firstDay) {				var realYear = month == 0 ? year-1 : year;				var realMonth = month == 0 ? "12" : String(month).padStart(2, '0');				var day = new Date(realYear, realMonth, 0).getDate()-firstDay+j+1;                var td = document.createElement('td');				td.setAttribute('data-date', realYear+'-'+realMonth+'-'+day);				td.setAttribute('class', 'other-month');				td.setAttribute('onclick', 'previous()');				row.appendChild(td);				var div = document.createElement('div');				div.setAttribute('class', 'date');				div.innerHTML = day;				td.appendChild(div);				createEvent(td, realYear+'.'+realMonth+'.'+day);								cellCount++;						} else if (date > daysInMonth) {				if ((cellCount + date-1) % 7 == 0) break;								var realYear = month == 11 ? year+1 : year;				var realMonth = month == 11 ? "01" : String(month+2).padStart(2, '0');				var td = document.createElement("td");				td.setAttribute('data-date', realYear+'-'+realMonth+'-0'+dateInNewMonth);				td.setAttribute('class', 'other-month');				td.setAttribute('onclick', 'next()');				row.appendChild(td);				var div = document.createElement('div');				div.setAttribute('class', 'date');				div.innerHTML = dateInNewMonth;				td.appendChild(div);				createEvent(td, realYear+'.'+realMonth+'.0'+dateInNewMonth);				cellCount++;				dateInNewMonth++;						} else {				var realMonth = String(month+1).padStart(2, '0');				var day = String(date).padStart(2, '0')								var td = document.createElement("td");				td.setAttribute('data-date', year+'-'+realMonth+'-'+day);				row.appendChild(td);				var div = document.createElement('div');				div.setAttribute('class', 'date');				if (j ==  7 || //vasárnap					realMonth == 1 && date == 1 || //újév					realMonth == 3 && date == 15 || //1848					realMonth == 4 && date == 10 || //nagypéntek					realMonth == 5 && date == 13 || //húsvéthétfő					realMonth == 6 && date == 1 || //munka ünnepe					realMonth == 7 && date == 1 || //pünkösdhétfő					realMonth == 8 && date == 20 || //Államalapítás					realMonth == 10 && date == 23 || //1956					realMonth == 11 && date == 1 || //Mindenszentek					realMonth == 12 && date == 25 || //karácsony1					realMonth == 12 && date == 26) //karácsony2					div.classList.add('holiday');				                if (date === today.getDate() && year === today.getFullYear() && month === today.getMonth())					div.classList.add("today");									div.innerHTML = date;                td.appendChild(div);								createEvent(td, year+'.'+realMonth+'.'+day);				date++;            }        }		tbl.appendChild(row);	}		document.querySelectorAll('td').forEach(element => {		element.addEventListener('mousedown', event => {			event.preventDefault();			var startTD = event.target.tagName == 'TD' ? event.target : event.target.parentElement;			var selecteds = document.querySelectorAll(".selected");						selecteds.forEach(e => {				e.classList.remove('selected');			});			end.value = '';			startTD.classList.add('selected');					start.value = startTD.getAttribute('data-date');		});		element.addEventListener('mouseup', event => {			event.preventDefault();			var endTD = event.target.tagName == 'TD' ? event.target : event.target.parentElement;			if (endTD.getAttribute('data-date') > start.value) {				end.value = endTD.getAttribute('data-date');				var allTD = document.getElementsByTagName('TD');				for (let TD of allTD) {					if (TD.getAttribute('data-date') > start.value &&						TD.getAttribute('data-date') <= endTD.getAttribute('data-date'))						TD.classList.add('selected');				}			}		});	});	addSelect();}function previous() {    currentYear = (currentMonth === 0) ? currentYear - 1 : currentYear;    currentMonth = (currentMonth === 0) ? 11 : currentMonth - 1;	renderCalendar(currentYear, currentMonth);}function showToday() {	currentMonth = today.getMonth();	currentYear = today.getFullYear();    renderCalendar(currentYear, currentMonth);}function next() {    currentYear = (currentMonth === 11) ? currentYear + 1 : currentYear;    currentMonth = (currentMonth + 1) % 12;	renderCalendar(currentYear, currentMonth);}function createEvent(td, date) {	events.forEach(element => {		if (element['start'] == date ||			(element['start']) <= date && element['end'] >= date) {			var event = document.createElement('div');			event.setAttribute('class', 'event');			event.innerHTML = element['name'];			td.appendChild(event);		}	});}function addSelect() {	var selecteds = document.querySelectorAll(".selected");	selecteds.forEach(e => {		e.classList.remove('selected');	});	if (start.value) {		if (document.querySelector('[data-date="'+start.value+'"]'))			document.querySelector('[data-date="'+start.value+'"]').classList.add('selected');		if (end.value) {			var allTD = document.getElementsByTagName('TD');			for (let TD of allTD) {				if (TD.getAttribute('data-date') >= start.value &&					TD.getAttribute('data-date') <= end.value)					TD.classList.add('selected');			}		}	}}